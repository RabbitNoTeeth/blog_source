name: Deploy blog

on:
  push:
    branches:
      - main  # 当推送到 `main` 分支时触发工作流（根据你的分支名调整）

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 检出当前仓库
      - name: Checkout repository A
        uses: actions/checkout@v2

      # 设置 Node.js 环境（根据 VuePress 的版本设置正确的 Node.js 版本）
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # VuePress 推荐使用的 Node.js 版本，调整为你需要的版本

      # 安装依赖
      - name: Install dependencies
        run: |
          npm install

      # 构建 VuePress 项目
      - name: Build VuePress site
        run: |
          npm run build  # 确保 package.json 中有构建命令，通常是 `vuepress build docs`
          ls -la docs/.vuepress/dist  # 确认文件是否生成

      # 检出仓库 B
      - name: Checkout repository B
        uses: actions/checkout@v2
        with:
          repository: RabbitNoTeeth/blog  # 将仓库 B 的用户名和仓库名称替换为你的仓库 B
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 自动生成的 token 进行身份验证
          ref: main  # 将仓库 B 设置为你要发布到的分支
          path: deploy-repo

      # 检查仓库B是否为空
      - name: Check if repository B is empty and create initial commit
        run: |
          cd deploy-repo
          if [ -z "$(git ls-files)" ]; then
            echo "Repository B is empty, creating initial commit"
            echo "# Initial commit" > README.md
            git add README.md
            git commit -m "Initial commit"
            git push origin main
          else
            echo "Repository B is not empty, proceeding with deployment"
          fi

      # 清理仓库 B 中的旧文件
      - name: Clean repository B
        run: |
          git rm -rf .
          cd ..

      # 将构建好的静态文件复制到仓库 B 中
      - name: Copy static files (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          ls -la docs/.vuepress/dist  # 确认文件是否生成
          cp -r docs/.vuepress/dist/* deploy-repo/

      - name: Copy static files (Windows)
        if: runner.os == 'Windows'
        run: |
        
          xcopy /E /I docs\.vuepress\dist\* .\deploy-repo\

      # 提交并推送到仓库 B
      - name: Commit and push to repository B
        run: |
          cd deploy-repo
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Deploy vuepress site"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
